整数计算会导致结果的小数部分被截断

计算碰撞，在寻路路径上碰到移动的障碍物，则在原地原地踏步2s等待移动的障碍物移动。若2s后仍有阻挡则重新寻路到下一个路径点

在计算碰撞寻路的时候，追击地方不能用地方的当前坐标。这样始终会判断目标点为阻挡，导致寻路失败。这样结果会导致一直寻路，CPU被跑满。
	通过在地方的坐标周围随机一个点可以解决这个问题。
	
添加怪物独立AI时间，避免在同一帧对所有怪物操作，均摊CPU压力。

List<T>.Contains的效率相比Dictionary<T,V>.ContainsKey效率要更低

寻路先检查能否直接到达或者通过相交的坐标点作为中间点能否直达。